{
    "created": 1701533473.5477707,
    "duration": 0.8678433895111084,
    "exitcode": 1,
    "root": "I:\\PYTHON\\catester",
    "environment": {},
    "summary": {
        "passed": 5,
        "failed": 2,
        "total": 7,
        "collected": 7
    },
    "collectors": [
        {
            "nodeid": "",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "catester/__init__.py",
                    "type": "Package"
                },
                {
                    "nodeid": "catester/tests/__init__.py",
                    "type": "Package"
                }
            ]
        },
        {
            "nodeid": "catester/__init__.py",
            "outcome": "passed",
            "result": []
        },
        {
            "nodeid": "catester/tests/test_me.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "catester/tests/test_me.py::test_Test 1_var1",
                    "type": "Function",
                    "lineno": 55
                },
                {
                    "nodeid": "catester/tests/test_me.py::test_Test 1_var2",
                    "type": "Function",
                    "lineno": 55
                },
                {
                    "nodeid": "catester/tests/test_me.py::test_Test 1_var3",
                    "type": "Function",
                    "lineno": 55
                },
                {
                    "nodeid": "catester/tests/test_me.py::test_Test 2_var4",
                    "type": "Function",
                    "lineno": 55
                },
                {
                    "nodeid": "catester/tests/test_me.py::test_Test 2_var5",
                    "type": "Function",
                    "lineno": 55
                },
                {
                    "nodeid": "catester/tests/test_me.py::test_Test 3_x",
                    "type": "Function",
                    "lineno": 55
                },
                {
                    "nodeid": "catester/tests/test_me.py::test_Test 3_y",
                    "type": "Function",
                    "lineno": 55
                }
            ]
        },
        {
            "nodeid": "catester/tests/__init__.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "catester/tests/test_me.py",
                    "type": "Module"
                }
            ]
        }
    ],
    "tests": [
        {
            "nodeid": "catester/tests/test_me.py::test_Test 1_var1",
            "lineno": 55,
            "outcome": "passed",
            "keywords": [
                "test_Test 1_var1",
                "test_me.py",
                "catester/tests/__init__.py",
                "catester"
            ],
            "setup": {
                "duration": 0.1756028000090737,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00040490001265425235,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.000415000002249144,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "catester/tests/test_me.py::test_Test 1_var2",
            "lineno": 55,
            "outcome": "passed",
            "keywords": [
                "test_Test 1_var2",
                "test_me.py",
                "catester/tests/__init__.py",
                "catester"
            ],
            "setup": {
                "duration": 0.0003242999955546111,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0002325000095879659,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0002776000037556514,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "catester/tests/test_me.py::test_Test 1_var3",
            "lineno": 55,
            "outcome": "passed",
            "keywords": [
                "test_Test 1_var3",
                "test_me.py",
                "catester/tests/__init__.py",
                "catester"
            ],
            "setup": {
                "duration": 0.0002806999982567504,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00032080001255963,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0002570000069681555,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "catester/tests/test_me.py::test_Test 2_var4",
            "lineno": 55,
            "outcome": "failed",
            "keywords": [
                "test_Test 2_var4",
                "test_me.py",
                "catester/tests/__init__.py",
                "catester"
            ],
            "setup": {
                "duration": 0.00031550000130664557,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00044779999007005244,
                "outcome": "failed",
                "crash": {
                    "path": "I:\\PYTHON\\catester\\catester\\tests\\test_me.py",
                    "lineno": 58,
                    "message": "AssertionError: Variable var4 not found in the namespace_reference\nassert 'var4' in {'__builtins__': {'ArithmeticError': <class 'ArithmeticError'>, 'AssertionError': <class 'AssertionError'>, 'Attribute...'matplotlib.pyplot' from 'I:\\\\PYTHON\\\\catester\\\\.venv\\\\lib\\\\site-packages\\\\matplotlib\\\\pyplot.py'>, 'va4': [1, 2], ...}"
                },
                "traceback": [
                    {
                        "path": "tests\\test_me.py",
                        "lineno": 58,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "namespace_student = {'__builtins__': {'ArithmeticError': <class 'ArithmeticError'>, 'AssertionError': <class 'AssertionError'>, 'Attribute...plot' from 'I:\\\\PYTHON\\\\catester\\\\.venv\\\\lib\\\\site-packages\\\\matplotlib\\\\pyplot.py'>, 'var1': 0.30000000000000004, ...}\nnamespace_reference = {'__builtins__': {'ArithmeticError': <class 'ArithmeticError'>, 'AssertionError': <class 'AssertionError'>, 'Attribute...'matplotlib.pyplot' from 'I:\\\\PYTHON\\\\catester\\\\.venv\\\\lib\\\\site-packages\\\\matplotlib\\\\pyplot.py'>, 'va4': [1, 2], ...}\n\n    def test_variable(namespace_student, namespace_reference):\n        assert name in namespace_student, f\"Variable {name} not found in the namespace_student\"\n>       assert name in namespace_reference, f\"Variable {name} not found in the namespace_reference\"\nE       AssertionError: Variable var4 not found in the namespace_reference\nE       assert 'var4' in {'__builtins__': {'ArithmeticError': <class 'ArithmeticError'>, 'AssertionError': <class 'AssertionError'>, 'Attribute...'matplotlib.pyplot' from 'I:\\\\PYTHON\\\\catester\\\\.venv\\\\lib\\\\site-packages\\\\matplotlib\\\\pyplot.py'>, 'va4': [1, 2], ...}\n\ntests\\test_me.py:58: AssertionError"
            },
            "teardown": {
                "duration": 0.0006397999968612567,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "catester/tests/test_me.py::test_Test 2_var5",
            "lineno": 55,
            "outcome": "failed",
            "keywords": [
                "test_Test 2_var5",
                "test_me.py",
                "catester/tests/__init__.py",
                "catester"
            ],
            "setup": {
                "duration": 0.0004096000047866255,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0005471999902511016,
                "outcome": "failed",
                "crash": {
                    "path": "I:\\PYTHON\\catester\\catester\\tests\\test_me.py",
                    "lineno": 65,
                    "message": "AssertionError: Variable var5 has incorrect type\nassert <class 'list'> == <class 'tuple'>"
                },
                "traceback": [
                    {
                        "path": "tests\\test_me.py",
                        "lineno": 65,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "namespace_student = {'__builtins__': {'ArithmeticError': <class 'ArithmeticError'>, 'AssertionError': <class 'AssertionError'>, 'Attribute...plot' from 'I:\\\\PYTHON\\\\catester\\\\.venv\\\\lib\\\\site-packages\\\\matplotlib\\\\pyplot.py'>, 'var1': 0.30000000000000004, ...}\nnamespace_reference = {'__builtins__': {'ArithmeticError': <class 'ArithmeticError'>, 'AssertionError': <class 'AssertionError'>, 'Attribute...'matplotlib.pyplot' from 'I:\\\\PYTHON\\\\catester\\\\.venv\\\\lib\\\\site-packages\\\\matplotlib\\\\pyplot.py'>, 'va4': [1, 2], ...}\n\n    def test_variable(namespace_student, namespace_reference):\n        assert name in namespace_student, f\"Variable {name} not found in the namespace_student\"\n        assert name in namespace_reference, f\"Variable {name} not found in the namespace_reference\"\n    \n        val_student = namespace_student[name]\n        val_reference = namespace_reference[name]\n        type_student = type(val_student)\n        type_reference = type(val_reference)\n        #assert isinstance(val_student, type_reference), f\"Variable {name} has incorrect type\"\n>       assert type_student == type_reference, f\"Variable {name} has incorrect type\"\nE       AssertionError: Variable var5 has incorrect type\nE       assert <class 'list'> == <class 'tuple'>\n\ntests\\test_me.py:65: AssertionError"
            },
            "teardown": {
                "duration": 0.0003355999942868948,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "catester/tests/test_me.py::test_Test 3_x",
            "lineno": 55,
            "outcome": "passed",
            "keywords": [
                "test_Test 3_x",
                "test_me.py",
                "catester/tests/__init__.py",
                "catester"
            ],
            "setup": {
                "duration": 0.00030080000578891486,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.007122399998479523,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.00028059999749530107,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "catester/tests/test_me.py::test_Test 3_y",
            "lineno": 55,
            "outcome": "passed",
            "keywords": [
                "test_Test 3_y",
                "test_me.py",
                "catester/tests/__init__.py",
                "catester"
            ],
            "setup": {
                "duration": 0.0003392999933566898,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0007989000005181879,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0006997000018600374,
                "outcome": "passed"
            }
        }
    ]
}